<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:323237052
-->
<mapper namespace="com...service.admin.mapper.AdminMapper">
    <!-- Admin -->
    <resultMap id="resultMap" type="Admin">
        <id column="id" property="id"/>
        <result column="user_name" property="userName" />
        <result column="password" property="password" />
        <result column="shop_id" property="shopId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="Admin"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="Admin"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="Admin"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="Admin"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="Admin">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="Admin">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="userNameIgnore_ == null or !userNameIgnore_">`user_name`,</if>
            <if test="passwordIgnore_ == null or !passwordIgnore_">`password`,</if>
            <if test="shopIdIgnore_ == null or !shopIdIgnore_">`shop_id`,</if>
            <if test="createTimeIgnore_ == null or !createTimeIgnore_">`create_time`,</if>
            <if test="updateTimeIgnore_ == null or !updateTimeIgnore_">`update_time`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="userNameNotIgnore_ != null and userNameNotIgnore_">`user_name`,</if>
         <if test="passwordNotIgnore_ != null and passwordNotIgnore_">`password`,</if>
         <if test="shopIdNotIgnore_ != null and shopIdNotIgnore_">`shop_id`,</if>
         <if test="createTimeNotIgnore_ != null and createTimeNotIgnore_">`create_time`,</if>
         <if test="updateTimeNotIgnore_ != null and updateTimeNotIgnore_">`update_time`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `user_name`,`password`,`shop_id`,`create_time`,`update_time`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userName!=null">#{userName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="password!=null">#{password},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="shopId!=null">#{shopId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="createTime!=null">#{createTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="updateTime!=null">#{updateTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="userName!=null">`user_name`,</if>
                <if test="password!=null">`password`,</if>
                <if test="shopId!=null">`shop_id`,</if>
                <if test="createTime!=null">`create_time`,</if>
                <if test="updateTime!=null">`update_time`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userName!=null">#{userName},</when></choose>
                <choose><when test="password!=null">#{password},</when></choose>
                <choose><when test="shopId!=null">#{shopId},</when></choose>
                <choose><when test="createTime!=null">#{createTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="updateTime!=null">#{updateTime,jdbcType=TIMESTAMP},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `user_name`,`password`,`shop_id`,`create_time`,`update_time`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userName!=null">#{item.userName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.password!=null">#{item.password},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.shopId!=null">#{item.shopId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.createTime!=null">#{item.createTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.updateTime!=null">#{item.updateTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.userName!=null">`user_name`,</if>
                <if test="item.password!=null">`password`,</if>
                <if test="item.shopId!=null">`shop_id`,</if>
                <if test="item.createTime!=null">`create_time`,</if>
                <if test="item.updateTime!=null">`update_time`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userName!=null">#{item.userName},</when></choose>
                <choose><when test="item.password!=null">#{item.password},</when></choose>
                <choose><when test="item.shopId!=null">#{item.shopId},</when></choose>
                <choose><when test="item.createTime!=null">#{item.createTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.updateTime!=null">#{item.updateTime,jdbcType=TIMESTAMP},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="userName!=null">`user_name`=#{userName}</when> <otherwise> `user_name`=NULL</otherwise> </choose>,
                    <choose> <when test="password!=null">`password`=#{password}</when> <otherwise> `password`=NULL</otherwise> </choose>,
                    <choose> <when test="shopId!=null">`shop_id`=#{shopId}</when> <otherwise> `shop_id`=NULL</otherwise> </choose>,
                    <choose> <when test="createTime!=null">`create_time`=#{createTime,jdbcType=TIMESTAMP}</when> <otherwise> `create_time`=NULL</otherwise> </choose>,
                    <choose> <when test="updateTime!=null">`update_time`=#{updateTime,jdbcType=TIMESTAMP}</when> <otherwise> `update_time`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="userName!=null">`user_name`=#{userName},</when></choose>
                    <choose><when test="password!=null">`password`=#{password},</when></choose>
                    <choose><when test="shopId!=null">`shop_id`=#{shopId},</when></choose>
                    <choose><when test="createTime!=null">`create_time`=#{createTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="updateTime!=null">`update_time`=#{updateTime,jdbcType=TIMESTAMP},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.userName!=null">`user_name`=#{item.userName}</when> <otherwise> `user_name`=NULL</otherwise> </choose>,
                    <choose> <when test="item.password!=null">`password`=#{item.password}</when> <otherwise> `password`=NULL</otherwise> </choose>,
                    <choose> <when test="item.shopId!=null">`shop_id`=#{item.shopId}</when> <otherwise> `shop_id`=NULL</otherwise> </choose>,
                    <choose> <when test="item.createTime!=null">`create_time`=#{item.createTime,jdbcType=TIMESTAMP}</when> <otherwise> `create_time`=NULL</otherwise> </choose>,
                    <choose> <when test="item.updateTime!=null">`update_time`=#{item.updateTime,jdbcType=TIMESTAMP}</when> <otherwise> `update_time`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.userName!=null">`user_name`=#{item.userName},</when></choose>
                    <choose> <when test="item.password!=null">`password`=#{item.password},</when></choose>
                    <choose> <when test="item.shopId!=null">`shop_id`=#{item.shopId},</when></choose>
                    <choose> <when test="item.createTime!=null">`create_time`=#{item.createTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.updateTime!=null">`update_time`=#{item.updateTime,jdbcType=TIMESTAMP},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        caho_dental.admin
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="userName!=null "> and `user_name` = #{userName}</if>
        <if test="password!=null "> and `password` = #{password}</if>
        <if test="shopId!=null "> and `shop_id` = #{shopId}</if>
        <if test="createTime!=null "> and `create_time` = #{createTime,jdbcType=TIMESTAMP}</if>
        <if test="updateTime!=null "> and `update_time` = #{updateTime,jdbcType=TIMESTAMP}</if>
                <if test="idFirst!=null "> and `id` <![CDATA[=]]>
                            #{idFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'user_name'">  `user_name` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'password'">  `password` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'shop_id'">  `shop_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'create_time'">  `create_time` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'update_time'">  `update_time` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'user_name desc'"> order by  `user_name` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'user_name asc'"> order by `user_name` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'password desc'"> order by  `password` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'password asc'"> order by `password` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'shop_id desc'"> order by  `shop_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'shop_id asc'"> order by `shop_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'create_time desc'"> order by  `create_time` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'create_time asc'"> order by `create_time` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'update_time desc'"> order by  `update_time` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'update_time asc'"> order by `update_time` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
